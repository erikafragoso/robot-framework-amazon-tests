name: Environment Tests

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to test'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - hom
        - prod

jobs:
  environment-tests:
    name: Tests for ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        
    - name: Install Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y wget gnupg2
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo gpg --dearmor -o /usr/share/keyrings/google-chrome.gpg
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/google-chrome.gpg] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        
    - name: Install ChromeDriver
      run: |
        CHROME_VERSION=$(google-chrome --version | awk '{print $3}' | awk -F'.' '{print $1}')
        echo "Chrome version: $CHROME_VERSION"
        
        # Usar webdriver-manager para baixar a vers√£o correta do ChromeDriver
        pip install webdriver-manager
        
        # Baixar ChromeDriver usando webdriver-manager
        python3 -c "import os; from webdriver_manager.chrome import ChromeDriverManager; driver_path = ChromeDriverManager().install(); print(f'ChromeDriver installed at: {driver_path}'); os.system(f'cp {driver_path} /usr/local/bin/chromedriver'); os.system('chmod +x /usr/local/bin/chromedriver')"
        
        # Verificar se o ChromeDriver foi instalado corretamente
        chromedriver --version
        
    - name: Run Tests for ${{ github.event.inputs.environment }}
      run: |
        robot --outputdir results --timestampoutputs -v ENVIRONMENT:${{ github.event.inputs.environment }} tests/amazon_tests.robot
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ${{ github.event.inputs.environment }}-test-results
        path: results/ 