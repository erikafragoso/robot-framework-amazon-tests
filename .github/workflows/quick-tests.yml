name: Quick Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  quick-tests:
    name: Quick Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        
    - name: Install Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y wget gnupg2
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo gpg --dearmor -o /usr/share/keyrings/google-chrome.gpg
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/google-chrome.gpg] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        
    - name: Install ChromeDriver
      run: |
        CHROME_VERSION=$(google-chrome --version | awk '{print $3}' | awk -F'.' '{print $1}')
        echo "Chrome version: $CHROME_VERSION"
        
        # Download ChromeDriver usando o m√©todo mais robusto
        CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION")
        if [ -z "$CHROMEDRIVER_VERSION" ]; then
          echo "Falling back to latest ChromeDriver version"
          CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE")
        fi
        
        echo "ChromeDriver version: $CHROMEDRIVER_VERSION"
        wget -O /tmp/chromedriver.zip "https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip"
        unzip /tmp/chromedriver.zip -d /usr/local/bin/
        chmod +x /usr/local/bin/chromedriver
        
    - name: Run Quick Tests
      run: |
        robot --outputdir results --timestampoutputs --include prioridade_alta tests/amazon_tests.robot
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: quick-test-results
        path: results/ 