name: Robot Framework Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 6 * * *'

jobs:
  smoke-tests:
    name: Smoke Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y wget gnupg2
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo gpg --dearmor -o /usr/share/keyrings/google-chrome.gpg
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/google-chrome.gpg] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        
    - name: Install ChromeDriver
      run: |
        pip install webdriver-manager
        python3 -c "import os; from webdriver_manager.chrome import ChromeDriverManager; path = ChromeDriverManager().install(); os.system(f'cp {path} /usr/local/bin/chromedriver'); os.system('chmod +x /usr/local/bin/chromedriver')"
        chromedriver --version
        
    - name: Install Robot Framework
      run: |
        pip install robotframework robotframework-seleniumlibrary robotframework-robocop
        
    - name: Set Chrome Options
      run: |
        mkdir -p /tmp/chrome-profile
        echo "--headless=new --no-sandbox --disable-dev-shm-usage --user-data-dir=/tmp/chrome-profile" > chrome-options.txt
      shell: bash

    - name: Run Smoke Tests
      env:
        ROBOT_SYSLOG_FILE: /tmp/robot_syslog.txt
        SELENIUM_CHROME_ARGS: "--headless=new --no-sandbox --disable-dev-shm-usage --user-data-dir=/tmp/chrome-profile"
      run: |
        robot --outputdir results --timestampoutputs --include smoke tests/amazon_tests.robot
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: smoke-test-results
        path: results/

  regression-tests:
    name: Regression Tests
    runs-on: ubuntu-latest
    needs: smoke-tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y wget gnupg2
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo gpg --dearmor -o /usr/share/keyrings/google-chrome.gpg
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/google-chrome.gpg] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        
    - name: Install ChromeDriver
      run: |
        pip install webdriver-manager
        python3 -c "import os; from webdriver_manager.chrome import ChromeDriverManager; path = ChromeDriverManager().install(); os.system(f'cp {path} /usr/local/bin/chromedriver'); os.system('chmod +x /usr/local/bin/chromedriver')"
        chromedriver --version
        
    - name: Install Robot Framework
      run: |
        pip install robotframework robotframework-seleniumlibrary robotframework-robocop
        
    - name: Set Chrome Options
      run: |
        mkdir -p /tmp/chrome-profile
        echo "--headless=new --no-sandbox --disable-dev-shm-usage --user-data-dir=/tmp/chrome-profile" > chrome-options.txt
      shell: bash

    - name: Run Regression Tests
      env:
        ROBOT_SYSLOG_FILE: /tmp/robot_syslog.txt
        SELENIUM_CHROME_ARGS: "--headless=new --no-sandbox --disable-dev-shm-usage --user-data-dir=/tmp/chrome-profile"
      run: |
        robot --outputdir results --timestampoutputs --include regressao tests/amazon_tests.robot
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: regression-test-results
        path: results/
