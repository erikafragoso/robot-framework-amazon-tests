name: Robot Framework Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Executa todos os dias às 6h da manhã
    - cron: '0 6 * * *'

jobs:
  smoke-tests:
    name: Smoke Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y wget gnupg2
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo gpg --dearmor -o /usr/share/keyrings/google-chrome.gpg
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/google-chrome.gpg] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        
    - name: Install ChromeDriver
      run: |
        CHROME_VERSION=$(google-chrome --version | awk '{print $3}' | awk -F'.' '{print $1}')
        echo "Chrome version: $CHROME_VERSION"
        
        # Tentar diferentes métodos para obter a versão correta do ChromeDriver
        CHROMEDRIVER_VERSION=""
        
        # Método 1: Tentar versão específica
        TEMP_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION")
        if [[ ! "$TEMP_VERSION" == *"<?xml"* ]] && [[ ! -z "$TEMP_VERSION" ]]; then
          CHROMEDRIVER_VERSION=$TEMP_VERSION
          echo "Found specific version: $CHROMEDRIVER_VERSION"
        fi
        
        # Método 2: Se não encontrou, tentar versão mais próxima
        if [[ -z "$CHROMEDRIVER_VERSION" ]]; then
          echo "Trying to find compatible version..."
          # Tentar versões próximas (139 -> 138, 137, etc.)
          for i in {1..10}; do
            TRY_VERSION=$((CHROME_VERSION - i))
            TEMP_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$TRY_VERSION")
            if [[ ! "$TEMP_VERSION" == *"<?xml"* ]] && [[ ! -z "$TEMP_VERSION" ]]; then
              CHROMEDRIVER_VERSION=$TEMP_VERSION
              echo "Found compatible version: $CHROMEDRIVER_VERSION (for Chrome $TRY_VERSION)"
              break
            fi
          done
        fi
        
        # Método 3: Se ainda não encontrou, usar versão mais recente
        if [[ -z "$CHROMEDRIVER_VERSION" ]]; then
          echo "Using latest version..."
          CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE")
        fi
        
        echo "Final ChromeDriver version: $CHROMEDRIVER_VERSION"
        wget -O /tmp/chromedriver.zip "https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip"
        unzip /tmp/chromedriver.zip -d /usr/local/bin/
        chmod +x /usr/local/bin/chromedriver
        
        # Verificar se o ChromeDriver foi instalado corretamente
        chromedriver --version
        
    - name: Install Robot Framework
      run: |
        pip install robotframework
        pip install robotframework-seleniumlibrary
        pip install robotframework-robocop
        
    - name: Run Smoke Tests
      run: |
        robot --outputdir results --timestampoutputs --include smoke tests/amazon_tests.robot
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: smoke-test-results
        path: results/
        
    - name: Publish test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: robot-results
        path: |
          results/*.html
          results/*.xml
          results/*.log

  regression-tests:
    name: Regression Tests
    runs-on: ubuntu-latest
    needs: smoke-tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y wget gnupg2
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo gpg --dearmor -o /usr/share/keyrings/google-chrome.gpg
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/google-chrome.gpg] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        
    - name: Install ChromeDriver
      run: |
        CHROME_VERSION=$(google-chrome --version | awk '{print $3}' | awk -F'.' '{print $1}')
        echo "Chrome version: $CHROME_VERSION"
        
        # Tentar diferentes métodos para obter a versão correta do ChromeDriver
        CHROMEDRIVER_VERSION=""
        
        # Método 1: Tentar versão específica
        TEMP_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION")
        if [[ ! "$TEMP_VERSION" == *"<?xml"* ]] && [[ ! -z "$TEMP_VERSION" ]]; then
          CHROMEDRIVER_VERSION=$TEMP_VERSION
          echo "Found specific version: $CHROMEDRIVER_VERSION"
        fi
        
        # Método 2: Se não encontrou, tentar versão mais próxima
        if [[ -z "$CHROMEDRIVER_VERSION" ]]; then
          echo "Trying to find compatible version..."
          # Tentar versões próximas (139 -> 138, 137, etc.)
          for i in {1..10}; do
            TRY_VERSION=$((CHROME_VERSION - i))
            TEMP_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$TRY_VERSION")
            if [[ ! "$TEMP_VERSION" == *"<?xml"* ]] && [[ ! -z "$TEMP_VERSION" ]]; then
              CHROMEDRIVER_VERSION=$TEMP_VERSION
              echo "Found compatible version: $CHROMEDRIVER_VERSION (for Chrome $TRY_VERSION)"
              break
            fi
          done
        fi
        
        # Método 3: Se ainda não encontrou, usar versão mais recente
        if [[ -z "$CHROMEDRIVER_VERSION" ]]; then
          echo "Using latest version..."
          CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE")
        fi
        
        echo "Final ChromeDriver version: $CHROMEDRIVER_VERSION"
        wget -O /tmp/chromedriver.zip "https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip"
        unzip /tmp/chromedriver.zip -d /usr/local/bin/
        chmod +x /usr/local/bin/chromedriver
        
        # Verificar se o ChromeDriver foi instalado corretamente
        chromedriver --version
        
    - name: Install Robot Framework
      run: |
        pip install robotframework
        pip install robotframework-seleniumlibrary
        pip install robotframework-robocop
        
    - name: Run Regression Tests
      run: |
        robot --outputdir results --timestampoutputs --include regressao tests/amazon_tests.robot
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: regression-test-results
        path: results/
        
    - name: Publish test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: robot-results
        path: |
          results/*.html
          results/*.xml
          results/*.log

  code-quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install Robocop
      run: |
        pip install robotframework-robocop
        
    - name: Run Robocop
      run: |
        robocop --output results/robocop_report.txt resources/ tests/
        
    - name: Upload code quality report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: code-quality-report
        path: results/robocop_report.txt 